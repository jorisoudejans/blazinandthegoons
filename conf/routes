# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           @controllers.ApplicationController.overviewView()
GET     /director                   @controllers.ApplicationController.directorView()
GET     /edit/:id                   @controllers.ApplicationController.editView(id: Long)

# Scripts
GET     /api/scripts                    @controllers.ScriptController.getAll()

GET     /api/scripts/connect                 @controllers.ScriptController.socket()
GET     /api/scripts/:id                @controllers.ScriptController.get(id: Long)
POST    /api/scripts/:id                @controllers.ScriptController.update(id: Long)
POST    /api/scripts/create             @controllers.ScriptController.create()
POST    /api/scripts/:id/actions/create     @controllers.ScriptController.addAction(id: Long)
DELETE  /api/scripts/:scriptId/actions/:actionId     @controllers.ScriptController.removeAction(scriptId: Long, actionId: Long)


# For now put snapshot of default cam in ScriptController
GET     /api/camera/image              @controllers.ScriptController.getCameraImage()

# Live scriptController
GET     /api/scripts/:id/start              @controllers.ScriptController.startScript(id: Long)
GET     /api/scripts/:id/update             @controllers.ScriptController.updateActiveScript(id: Long)


#PresetController service
GET     /api/presets                    @controllers.PresetController.getAll()
GET     /api/presets/:id                @controllers.PresetController.get(id: Long)

POST    /api/presets/create             @controllers.PresetController.create()

#ActionController service
GET     /api/actions                    @controllers.ActionController.getAll()
GET     /api/actions/:id                @controllers.ActionController.get(id: Long)
POST    /api/actions/create             @controllers.ActionController.create()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               @controllers.Assets.versioned(path="/public", file)
    